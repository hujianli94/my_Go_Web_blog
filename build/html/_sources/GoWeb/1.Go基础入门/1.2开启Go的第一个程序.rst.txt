.. contents::
   :depth: 3
..

开启Go的第一个程序
==================

``1.2-helloWorld.go``

::

   package main

   import "fmt"

   func main() {
       fmt.Println("Hello World~")
   }

输入如下命令

::

   $ go run 1.2-helloWorld.go
   Hello World~

..

   提示：可以运行 “go build”来编译

::

   $ go build 1.2-helloWorld.go
   $ 1.2-helloWorld.exe
   Hello World~

1.包的声明
----------

::

   package xxxx

一般来说Go语言的源文件与所在文件夹有一一对应关系.

Go语言的包具有以下特点

-  一个目录下的同级文件属于同一个包
-  包名可以与其目录名不同
-  main是应用程序的入口文件，一个Go语言程序必须有且仅有一个main包

如果程序没有main包，编译会报错，且无法生成可执行文件。

2.包的导入
----------

::

   import "package name"
   import "fmt"

可以用一个import关键字导入多个包，此时需要使用“()”将包的名字包围起来，并且每一个包占用一行，形式如下：

::

   import(
       "os"
       "fmt"
   )

也可以为导入的包设置自定义别名

::

   import(
       alias1 "os"
       alias2 "fmt"
   )

这样可以用别名“alias1”来代替os，用别名“alias2”来代替fmt了

如果只想初始化某个包，不导入包中的变量或函数，可以使用_来代替别名

::

   import(
       _ "os"
       alias2 "fmt"
   )

此时如果继续调用os这个包，会报错，undefined：包名

3.main()函数
------------

main()函数是go语言应用程序的入口函数。

main()函数是自定义函数的一种，在Go语言中，所有函数都是以关键字func开头的，定义格式如下：

::

   func 函数名 (参数列表) （返回值列表）{
       函数体
   } 

..

   Go语言的左大括号必须和函数名在同一行，不然会报错

Go语言的每一行结尾处不用使用;分号，如果加上分号；也不会报错，Go编辑器会自动帮助我们添加。
